{"version":3,"sources":["GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","goods","map","good","style","color","name","id","API_URL","getAll","a","fetch","then","response","ok","Error","status","statusText","json","get5First","sort","good1","good2","localeCompare","slice","catch","error","getRed","filter","App","useState","setGoods","isLoading","setIsLoading","errorMessage","setErrorMessage","getGoods","callback","message","finally","useEffect","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"8NAOaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAEE,UAAQ,OACRC,MAAO,CAAEC,MAAOF,EAAKE,OAHvB,SAKGF,EAAKG,MAJDH,EAAKI,U,uBCRZC,EAAO,wEAEN,SAAeC,IAAtB,+B,4CAAO,sBAAAC,EAAA,+EACEC,MAAMH,GACVI,MAAK,SAAAC,GACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAJ,UAAaF,EAASG,OAAtB,YAAgCH,EAASI,aAGjD,OAAOJ,EAASK,WAPf,4C,sBAWA,IAAMC,EAAY,WACvB,OAAOV,IACJG,MAAK,SAAAX,GAAK,OAAIA,EACZmB,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMf,KAAKiB,cAAcD,EAAMhB,SACtDkB,MAAM,EAAG,MACXC,OAAM,SAAAC,GACL,MAAMA,MAICC,EAAS,WACpB,OAAOlB,IACJG,MAAK,SAAAX,GAAK,OAAIA,EAAM2B,QAAO,SAAAzB,GAAI,MAAmB,QAAfA,EAAKE,YACxCoB,OAAM,SAAAC,GACL,MAAMA,MCvBCG,EAAgB,WAC3B,MAA0BC,mBAAiB,IAA3C,mBAAO7B,EAAP,KAAc8B,EAAd,KACA,EAAkCD,oBAAS,GAA3C,mBAAOE,EAAP,KAAkBC,EAAlB,KACA,EAAwCH,mBAAS,IAAjD,mBAAOI,EAAP,KAAqBC,EAArB,KAEMC,EAAW,SAACC,GAChBA,IACGzB,KAAKmB,GACLN,OAAM,SAACC,GAAD,OAAkBS,EAAgBT,EAAMY,YAC9CC,SAAQ,kBAAMN,GAAa,OAQhC,OALAO,qBAAU,WACRP,GAAa,GACbG,EAAS3B,KACR,IAGD,sBAAKgC,UAAU,MAAf,UACE,uDAEA,wBACEC,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAMP,EAAS3B,IAH1B,4BAQA,wBACEiC,KAAK,SACL,UAAQ,oBACRC,QAAS,kBAAMP,EAASjB,IAH1B,gCAQA,wBACEuB,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAMP,EAAST,IAH1B,4BAQCK,EACC,2CAEA,cAAC,EAAD,CAAW/B,MAAOA,IAGnBiC,GACC,yDAA0BA,SCxDlCU,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.24795e62.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li\n        key={good.id}\n        data-cy=\"good\"\n        style={{ color: good.color }}\n      >\n        {good.name}\n      </li>\n    ))}\n  </ul>\n);\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport async function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`${response.status} ${response.statusText}`);\n      }\n\n      return response.json();\n    });\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => goods\n      .sort((good1, good2) => good1.name.localeCompare(good2.name))\n      .slice(0, 5)) // sort and get the first 5\n    .catch(error => {\n      throw error;\n    });\n};\n\nexport const getRed = () => {\n  return getAll()\n    .then(goods => goods.filter(good => good.color === 'red')) // get only red\n    .catch(error => {\n      throw error;\n    });\n};\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\n\nimport { getAll, get5First, getRed } from './api/goods';\nimport { Good } from './types/Good';\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const getGoods = (callback: () => Promise<Good[]>) => {\n    callback()\n      .then(setGoods)\n      .catch((error: Error) => setErrorMessage(error.message))\n      .finally(() => setIsLoading(false));\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n    getGoods(getAll);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of Goods</h1>\n\n      <button\n        type=\"button\"\n        data-cy=\"all-button\"\n        onClick={() => getGoods(getAll)}\n      >\n        Load all goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"first-five-button\"\n        onClick={() => getGoods(get5First)}\n      >\n        Load 5 first goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"red-button\"\n        onClick={() => getGoods(getRed)}\n      >\n        Load red goods\n      </button>\n\n      {isLoading ? (\n        <p>Loading...</p>\n      ) : (\n        <GoodsList goods={goods} />\n      )}\n\n      {errorMessage && (\n        <p>{`There is an Error: ${errorMessage}`}</p>\n      )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}